<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>comment</key>
    <string>Coldfusion Cfscript Language</string>
    <key>fileTypes</key>
    <array>
        <string>cfc</string>
    </array>
    <key>firstLineMatch</key>
    <string></string>
    <key>foldingStartMarker</key>
    <string>^.*\bfunction\s*(\w+\s*)?\([^\)]*\)(\s*\{[^\}]*)?\s*$</string>
    <key>foldingStopMarker</key>
    <string>^\s*\}</string>
    <key>keyEquivalent</key>
    <string>^~F</string>
    <key>name</key>
    <string>cfscript</string>
    <key>patterns</key>
    <array>


        <!-- IF I'M A TAG BASED COMPONENT -->
        <dict>
            <key>begin</key>
            <string>(?:^\s+)?&lt;((?i:cfcomponent))\b(?![^&gt;]*/&gt;)</string>

            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.tag.cfml</string>
                    <!-- <string>entity.name.tag.cfquery.html</string> -->
                </dict>
            </dict>

            <key>end</key>
            <string>&lt;/((?i:cfcomponent))&gt;(?:\s*\n)?</string>

            <key>name</key>
            <string>source.cfc.embedded.cfml</string>

            <key>patterns</key>
            <array>
                <!-- <dict>
                    <key>include</key>
                    <string>#tag-stuff</string>
                </dict> -->
                <dict>
                    <key>begin</key>
                    <string>&gt;</string>
                    <key>end</key>
                    <string>(?=&lt;/(?i:cfcomponent))</string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>text.html.cfm</string>
                        </dict>
                    </array>
                </dict>
            </array>
        </dict>
        <!-- END IF I'M A TAG BASED COMPONENT -->




        <dict>
            <key>begin</key>
            <string>/\*\*(?!/)</string>
            <key>captures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.cfscript</string>
                </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.documentation.cfscript</string>
        </dict>

        <!-- comment block /* */ -->
        <dict>
            <key>begin</key>
            <string>/\*</string>
            <key>captures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.cfscript</string>
                </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.cfscript</string>
        </dict>

        <!-- double slash comment -->
        <dict>
            <key>match</key>
            <string>(//).*$\n?</string>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.cfscript</string>
                </dict>
            </dict>
            <key>name</key>
            <string>comment.line.double-slash.cfscript</string>
        </dict>


        <!-- booleans true/false -->
        <dict>
            <key>match</key>
            <string>\btrue\b</string>
            <key>name</key>
            <string>constant.language.boolean.true.cfscript</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\bfalse\b</string>
            <key>name</key>
            <string>constant.language.boolean.false.cfscript</string>
        </dict>

        <!-- this isn't used just adding in case for later -->
        <dict>
            <key>match</key>
            <string>\bnull\b</string>
            <key>name</key>
            <string>constant.language.null.cfscript</string>
        </dict>

        <!-- super/this -->
        <dict>
            <key>match</key>
            <string>\b(super|this)\b</string>
            <key>name</key>
            <string>variable.language.cfscript</string>
        </dict>



        <!-- TODO: THESE NEXT 2 DICT DEFINITIONS NEED TO BE PORTED TO CFSCRIPT -->
        <dict>
            <key>match</key>
            <string>!|\$|%|&amp;|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\b(in|instanceof|new|delete|typeof|void)\b</string>
            <key>name</key>
            <string>keyword.operator.cfscript</string>
        </dict>


        <!-- SUPPORT FUNCTIONS (ADD ALL CFSCRIPT FUNCTIONS HERE) -->
        <dict>
            <key>match</key>
            <string>\b(s(h(ift|ow(Mod(elessDialog|alDialog)|Help))|croll(X|By(Pages|Lines)?|Y|To)?|t(op|rike)|i(n|zeToContent|debar|gnText)|ort|u(p|b(str(ing)?)?)|pli(ce|t)|e(nd|t(Re(sizable|questHeader)|M(i(nutes|lliseconds)|onth)|Seconds|Ho(tKeys|urs)|Year|Cursor|Time(out)?|Interval|ZOptions|Date|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(ome|andleEvent)|navigate|c(har(CodeAt|At)|o(s|n(cat|textual|firm)|mpile)|eil|lear(Timeout|Interval)?|a(ptureEvents|ll)|reate(StyleSheet|Popup|EventObject))|t(o(GMTString|S(tring|ource)|U(TCString|pperCase)|Lo(caleString|werCase))|est|a(n|int(Enabled)?))|i(s(NaN|Finite)|ndexOf|talics)|d(isableExternalCapture|ump|etachEvent)|u(n(shift|taint|escape|watch)|pdateCommands)|j(oin|avaEnabled)|p(o(p|w)|ush|lugins.refresh|a(ddings|rse(Int|Float)?)|r(int|ompt|eference))|e(scape|nableExternalCapture|val|lementFromPoint|x(p|ec(Script|Command)?))|valueOf|UTC|queryCommand(State|Indeterm|Enabled|Value)|f(i(nd|le(ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(nt(size|color)|rward)|loor|romCharCode)|watch|l(ink|o(ad|g)|astIndexOf)|a(sin|nchor|cos|t(tachEvent|ob|an(2)?)|pply|lert|b(s|ort))|r(ou(nd|teEvents)|e(size(By|To)|calc|turnValue|place|verse|l(oad|ease(Capture|Events)))|andom)|g(o|et(ResponseHeader|M(i(nutes|lliseconds)|onth)|Se(conds|lection)|Hours|Year|Time(zoneOffset)?|Da(y|te)|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Da(y|te)|FullYear)|FullYear|A(ttention|llResponseHeaders)))|m(in|ove(B(y|elow)|To(Absolute)?|Above)|ergeAttributes|a(tch|rgins|x))|b(toa|ig|o(ld|rderWidths)|link|ack))\b(?=\()</string>
            <key>name</key>
            <string>support.function.cfscript</string>
        </dict>

        <!-- TODO: more cfscript shit here I guess -->


    </array>

    <key>scopeName</key>
    <string>source.cfscript</string>
    <key>uuid</key>
    <string>93E017CC-6F27-11D9-90EB-000D93589AF6</string>
</dict>
</plist>
