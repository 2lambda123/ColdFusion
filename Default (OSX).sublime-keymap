[
    // super+Shift+O <cfoutput></cfoutput>
    {
    "keys": ["super+shift+o"], "command": "insert_snippet",
    "args": { "name": "Packages/Coldfusion/cfoutput.sublime-snippet" },
    "context": [ {"key": "selector", "operator": "equal", "operand": "text.html.cfm", "match_all": true }]
    },
    // super+Alt+R <cfscript></cfscript>
    {
    "keys": ["super+alt+r"], "command": "insert_snippet",
    "args": { "name": "Packages/Coldfusion/cfscript.sublime-snippet" },
    "context": [{ "key": "selector", "operator": "equal", "operand": "text.html.cfm", "match_all": true }]
    },
    // super+Alt+D  <cfdump var="##">
    {
    "keys": ["super+alt+d"], "command": "insert_snippet",
    "args": { "name": "Packages/Coldfusion/cfdump.sublime-snippet" },
    "context": [ {"key": "selector", "operator": "equal", "operand": "text.html.cfm", "match_all": true }]
    },
    // super+Shift+M  ColdFusion Comment <!--- --->
    {
    "keys": ["super+shift+m"], "command": "toggle_comment",
    "args": { "block": true },
    "context": [ {"key": "selector", "operator": "equal", "operand": "text.html.cfm", "match_all": true }]
    },
    // Pound/hash marks ##
    {
    "keys": ["#"], "command": "insert_snippet",
    "args": {"contents": "#$0#"},
    "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        // optional following_text and preceeding_text regex
        { "key": "following_text", "operator": "regex_contains", "operand": "", "match_all": true },
        { "key": "preceding_text", "operator": "not_regex_contains", "operand": "=\"", "match_all": true },
        { "key": "selector", "operator": "equal", "operand": "text.html.cfm", "match_all": true }
      ]
    },
    // Pound/hash marks ## wrap selection
    {
    "keys": ["#"], "command": "insert_snippet",
    "args": {"contents": "#${0:$SELECTION}#"},
    "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
        { "key": "selector", "operator": "equal", "operand": "text.html.cfm", "match_all": true }
      ]
    },
    // Pound/hash marks ## move cursor forward
    {
    "keys": ["#"], "command": "move",
    "args": {"by": "characters", "forward": true},
    "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        { "key": "following_text", "operator": "regex_contains", "operand": "^#", "match_all": true },
        { "key": "selector", "operator": "equal", "operand": "text.html.cfm", "match_all": true }
      ]
    },
    // Pound/hash marks ## backsapce remove both
    {
    "keys": ["backspace"], "command": "run_macro_file",
    "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"},
    "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        { "key": "preceding_text", "operator": "regex_contains", "operand": "#$", "match_all": true },
        { "key": "following_text", "operator": "regex_contains", "operand": "^#", "match_all": true },
        { "key": "selector", "operator": "equal", "operand": "text.html.cfm", "match_all": true }
      ]
    }
    // end

]
